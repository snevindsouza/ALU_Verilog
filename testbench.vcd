$date
	Tue Oct 10 17:59:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 1 " sign $end
$var wire 1 # parity $end
$var wire 1 $ overflow $end
$var wire 4 % out [3:0] $end
$var wire 1 & carry $end
$var reg 4 ' a [3:0] $end
$var reg 4 ( b [3:0] $end
$var reg 2 ) select [1:0] $end
$scope module dut $end
$var wire 4 * a [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 2 , select [1:0] $end
$var reg 1 & carry $end
$var reg 4 - out [3:0] $end
$var reg 1 $ overflow $end
$var reg 1 # parity $end
$var reg 1 " sign $end
$var reg 1 ! zero $end
$upscope $end
$scope task stimulus $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11 -
b1 ,
b1 +
b100 *
b1 )
b1 (
b100 '
0&
b11 %
0$
1#
0"
0!
$end
#5
1&
b110 %
b110 -
b1101 (
b1101 +
b11 '
b11 *
#10
0&
b11 %
b11 -
b10 (
b10 +
b101 '
b101 *
#15
0#
b111 %
b111 -
b110 (
b110 +
b1101 '
b1101 *
#20
1$
b1 %
b1 -
b1100 (
b1100 +
#25
1"
1&
b1110 %
b1110 -
b10 )
b10 ,
b101 (
b101 +
b110 '
b110 *
#30
0$
1#
0"
0&
b11 %
b11 -
b111 (
b111 +
b101 '
b101 *
#35
0#
1"
1&
b1110 %
b1110 -
b10 (
b10 +
b1111 '
b1111 *
#40
0&
b1101 %
b1101 -
b0 )
b0 ,
b101 (
b101 +
b1000 '
b1000 *
#45
1$
1#
0"
1!
b0 %
b0 -
b1 )
b1 ,
b1101 (
b1101 +
b1101 '
b1101 *
#50
